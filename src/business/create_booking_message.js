// Generated by CoffeeScript 1.12.4
(function() {
  var Plan, c, ensureIsMine, mail, sendMail;

  Plan = require('./helpers/plan');

  c = require('./common_tasks');

  mail = require('../mail/message');

  ensureIsMine = function(arg, cb) {
    var booking, uid, user;
    booking = arg.booking, user = arg.user;
    uid = user.get('id');
    if (booking.get('sellerUserId') === uid || booking.get('buyerUserId') === uid) {
      return cb({});
    } else {
      return cb({
        error: {
          id: 'forbidden',
          description: 'Only owners of booking may create messages'
        }
      });
    }
  };

  sendMail = Plan(c.findOne('profile.userId = booking.sellerUserId', {
    rename: 'seller'
  }), c.findOne('profile.userId = booking.buyerUserId', {
    rename: 'buyer'
  }), c.findOne('contact.userId = booking.sellerUserId', {
    rename: 'sellerContact'
  }), c.findOne('contact.userId = booking.buyerUserId', {
    rename: 'buyerContact'
  }), c.findOne('ad.id = booking.adId'), function(arg, cb) {
    var ad, booking, buyer, buyerContact, code, contact, me, other, seller, sellerContact, user;
    booking = arg.booking, buyer = arg.buyer, seller = arg.seller, buyerContact = arg.buyerContact, sellerContact = arg.sellerContact, code = arg.code, ad = arg.ad, user = arg.user;
    if (seller.get('userId') === user.get('id')) {
      me = seller;
      other = buyer;
      contact = buyerContact;
    } else {
      me = buyer;
      other = seller;
      contact = sellerContact;
    }
    return mail({
      me: me,
      other: other,
      booking: booking,
      ad: ad,
      to: contact.get('mail')
    }, cb);
  });

  module.exports = Plan(c.getLoggedInUser, c.validateArgs('booking_message'), c.ensure('args.userId == user.id'), c.findOne('booking.id = args.bookingId'), ensureIsMine, sendMail, c.create('booking_message'));

}).call(this);
