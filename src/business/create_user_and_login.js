// Generated by CoffeeScript 1.12.4
(function() {
  var Plan, Session, bcrypt, c, createMailValidation, encryptPassword, mailValidation, sendVerificationMail, setSessionUser, uuid;

  Plan = require('./helpers/plan');

  Session = require('../logic/session');

  c = require('./common_tasks');

  bcrypt = require('bcrypt');

  uuid = require('node-uuid').v4;

  sendVerificationMail = require('../mail/send_verification_mail');

  setSessionUser = function(arg, cb) {
    var session, user;
    session = arg.session, user = arg.user;
    return Session.set(session, 'userId', user.get('id'), function() {
      return cb({});
    });
  };

  encryptPassword = function(arg, cb) {
    var args;
    args = arg.args;
    args.password = bcrypt.hashSync(args.password, 11);
    return cb({});
  };

  createMailValidation = Plan(function(arg, cb) {
    var user;
    user = arg.user;
    return cb({
      args: {
        userId: user.get('id'),
        activation_code: uuid()
      }
    });
  }, c.create('mail_validation'));

  mailValidation = function(arg, cb) {
    var args, mail_validation;
    args = arg.args, mail_validation = arg.mail_validation;
    return sendVerificationMail({
      to: args.name,
      code: mail_validation.get('activation_code')
    }, cb);
  };

  module.exports = Plan(c.getSession, c.findNo('login.name == args.name'), Plan(c.set('args = {}'), c.create('user')), setSessionUser, c.set('args.userId = user.id'), c.validateArgs('login'), encryptPassword, createMailValidation, mailValidation, c.create('login'), c.set('login.password = undefined'), c.select('user', 'login'));

}).call(this);
